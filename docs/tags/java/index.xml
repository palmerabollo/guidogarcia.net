<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Call me Guido</title>
    <link>https://guidogarcia.net/tags/java/</link>
    <description>Recent content in Java on Call me Guido</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Apr 2014 16:19:37 +0000</lastBuildDate>
    
	<atom:link href="https://guidogarcia.net/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to catch an Internet troll</title>
      <link>https://guidogarcia.net/blog/2014/04/25/how-to-catch-an-internet-troll/</link>
      <pubDate>Fri, 25 Apr 2014 16:19:37 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2014/04/25/how-to-catch-an-internet-troll/</guid>
      <description>Some weeks ago I carried out a social experiment (dameunverso.com, spanish) that consisted in writing a poem in a collaborative and anonymous way. This means that anyone can add a new verse to the poem without identifying themselves or leaving any metadata (no cookies, no IP address tracking, etc).
Our first trolls didn&amp;rsquo;t take long to appear, mostly in the form of copyrighted material, spam and offensive contents. Is it possible to automatically classify an anonymous verse as spammy?</description>
    </item>
    
    <item>
      <title>Function parameters in Python, Java and Javascript</title>
      <link>https://guidogarcia.net/blog/2014/01/18/function-parameters-python-java-javascript/</link>
      <pubDate>Sat, 18 Jan 2014 11:31:44 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2014/01/18/function-parameters-python-java-javascript/</guid>
      <description>This is a short post about how these programming languages compare with each other when it comes to declaring functions with optional parameters and default values. Feel free to leave alternatives in other languages in the comments.
Python. The good. Python is my favorite. Use your parameters in any order and define their default values as part of the function signature itself.
def foo(arg1, arg2=&amp;quot;default&amp;quot;): print &amp;quot;arg1:&amp;quot;, arg1, &amp;quot;arg2:&amp;quot;, arg2  The price to pay is that you can not define two methods with the same name in the same class.</description>
    </item>
    
    <item>
      <title>Why is node.js so cool? (from a Java guy)</title>
      <link>https://guidogarcia.net/blog/2013/12/09/why-is-nodejs-so-cool-from-a-java-guy/</link>
      <pubDate>Mon, 09 Dec 2013 14:43:51 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2013/12/09/why-is-nodejs-so-cool-from-a-java-guy/</guid>
      <description>I confess: I am a Java guy At least I used to be. Until I meet node.js. I still think the JVM is one of the greatest pieces of technology ever created by man, and I love the Spring Framework, the hundreds of Apache Java libraries or the over-six-hundred-page books about JEE patterns. It is great for big applications that are created by many developers, or applications that are made to last.</description>
    </item>
    
    <item>
      <title>Deploy virtual machines on Instant Servers cloud with Java</title>
      <link>https://guidogarcia.net/blog/2013/02/17/deploy-virtual-machines-on-instant-servers-cloud-with-java/</link>
      <pubDate>Sun, 17 Feb 2013 20:23:26 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2013/02/17/deploy-virtual-machines-on-instant-servers-cloud-with-java/</guid>
      <description>Instant Servers is the infrastructure as a service (IaaS) system I have been working on during the last months in Telefónica Digital.
The service offers a public REST API (Cloud API) that is super simple to use. However, in this post I will show you how to manage your infrastructure using a Java client, without dealing with HTTP requests.
Build the Cloud API client Man does not live by nodejs alone.</description>
    </item>
    
    <item>
      <title>Analysis of variance (ANOVA) applied to fraud detection</title>
      <link>https://guidogarcia.net/blog/2012/08/26/analysis-of-variance-anova-applied-to-fraud-detection/</link>
      <pubDate>Sun, 26 Aug 2012 17:42:41 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2012/08/26/analysis-of-variance-anova-applied-to-fraud-detection/</guid>
      <description>Fraud detection is a topic applicable to many sectors (financial, insurance, etc). The method explained in this post is applied in the market research field by Gather Precision (a great market research tool developed by Gather Estudios, BTW), as an early signal to detect frauds in opinion polls.
Imagine you have four field workers (Peter, John, Mary, Ann) taking surveys on the street. They spend different times gathering the data, and we want to discover if there are significant differences on the average levels.</description>
    </item>
    
    <item>
      <title>How to develop a Java REST client in 3 minutes</title>
      <link>https://guidogarcia.net/blog/2012/03/02/how-to-develop-java-rest-client/</link>
      <pubDate>Fri, 02 Mar 2012 20:10:07 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2012/03/02/how-to-develop-java-rest-client/</guid>
      <description>Some time ago I wrote a post about how to implement a REST API with Java (spanish). Today I am going to write about how to consume a REST API as a client. More specifically, I am going to use Digg API (probably not the best REST API out there) to search stories by a given keyword.
Show me the code As it is a third party REST API, I am going to use the client framework provided by RESTEasy, that I find extremely easy to use.</description>
    </item>
    
    <item>
      <title>Auditing JPA entities with Hibernate Envers</title>
      <link>https://guidogarcia.net/blog/2012/01/25/auditing-jpa-entities-with-hibernate-envers/</link>
      <pubDate>Tue, 24 Jan 2012 23:06:26 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2012/01/25/auditing-jpa-entities-with-hibernate-envers/</guid>
      <description>In a recent project we had the need to keep a record of the changes made in every domain entity. That is, we need to insert a new record on an audit table every time an entity is created/updated/deleted.
This is not the first time this problem arises. I think this is a the case of a cross-cutting concern, that fits well into the aspect-oriented programming area. I have seen this very same problem in many different projects I have worked on, always solved with one variant of these two approches:</description>
    </item>
    
    <item>
      <title>Graph your Twitter network with Gephi</title>
      <link>https://guidogarcia.net/blog/2012/01/21/graph-yourtwitter-network-with-gephi/</link>
      <pubDate>Sat, 21 Jan 2012 09:37:14 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2012/01/21/graph-yourtwitter-network-with-gephi/</guid>
      <description>Gephi is a really cool open-source (GPL) project for visualizing and analyzing network graphs.
Getting started If you want to start using Gephi you have two choices:
 * The blue pill, a simple **GUI**, pretty easy to use, that offers many network metrics, statistical algorithms (clustering, etc) to analyze your own graphs. The story ends. * The red pill, the **[Gephi Toolkit](http://wiki.gephi.org/index.php/Toolkit_portal)**. The toolkit is a standard Java library that can be integrated with your own code if you need to analyze graphs.</description>
    </item>
    
    <item>
      <title>ACRA, reporting crashes in your Android app the easy way</title>
      <link>https://guidogarcia.net/blog/2011/12/20/acra-reporting-crashes-in-your-android-application-the-easy-way/</link>
      <pubDate>Tue, 20 Dec 2011 20:02:30 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2011/12/20/acra-reporting-crashes-in-your-android-application-the-easy-way/</guid>
      <description>ACRA (Application Crash Report for Android) is a extremely helpful Android library that allows your mobile application to send a report to different destinations when it crashes -miserably-.
It is both powerful/configurable and very easy to use at the same time, allowing:
 * Different kind of notifications (silent, toast, status bar, etc) * Detailed crash reports (stack traces, device model, system versions) * Many targets (email, shared google spreadsheet, etc)  In my example I have used a shared google document as the target where the notifications are sent, and I have chosen not to show anything to de user when the application crashes (silent mode).</description>
    </item>
    
    <item>
      <title>Getting started with Spring Roo</title>
      <link>https://guidogarcia.net/blog/2011/12/05/getting-started-with-spring-roo/</link>
      <pubDate>Mon, 05 Dec 2011 14:52:22 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2011/12/05/getting-started-with-spring-roo/</guid>
      <description>For those who are not familiar with it, Spring Roo is an open source tool that provides rapid application development of Java applications, using standard Java technologies underneath.
Last week I gave a presentation (slides) about how to start using Spring Roo to some co-workers in Telefónica Digital. I have recorded a video with captions for those who couldn&amp;rsquo;t attend (use fullscreen mode and 720p).
The video does not cover some interesting aspects about Spring such as Spring Data (I will write a post about it), or how to completely remove Spring Roo from your project (right button &amp;gt; Refactor &amp;gt; Push In and that is all).</description>
    </item>
    
    <item>
      <title>Scripting for the Java platform</title>
      <link>https://guidogarcia.net/blog/2011/11/03/scripting-for-the-java-platform/</link>
      <pubDate>Thu, 03 Nov 2011 07:44:57 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2011/11/03/scripting-for-the-java-platform/</guid>
      <description>Despite many developers do not know it, since Java SE 6 it is really easy to integrate Java and some scripting languages through a standard Java Scripting API (JSR-223 implementation)
Currently, both AppleScript (2.2.1) and ECMAScript (1.6) script engines are supported by default, at least on my machine. In the following example I invoke a Javascript function from Java, using Mozilla Rhino, the JavaScript implementation that ships with Java SE 6:</description>
    </item>
    
    <item>
      <title>Java : different ways to filter a Collection</title>
      <link>https://guidogarcia.net/blog/2011/10/29/java-different-ways-filter-collection/</link>
      <pubDate>Sat, 29 Oct 2011 13:37:43 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2011/10/29/java-different-ways-filter-collection/</guid>
      <description>Imagine we have a simple Java class:
 public class Person { private int age; private Gender sex; // constructor, getters &amp;amp; setters } enum Gender { MALE, FEMALE };  And that you have a Collection of Person objects, such as the following one:
 Person p1 = new Person(35, Gender.MALE); Person p2 = new Person(30, Gender.MALE); Person p3 = new Person(25, Gender.FEMALE); Person p4 = new Person(15, Gender.</description>
    </item>
    
    <item>
      <title>BigDecimal : detalles que hacen que Java de asco</title>
      <link>https://guidogarcia.net/blog/2011/08/15/bigdecimal-detalle-que-hacen-que-java-de-asco/</link>
      <pubDate>Mon, 15 Aug 2011 18:31:34 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2011/08/15/bigdecimal-detalle-que-hacen-que-java-de-asco/</guid>
      <description>Sirva como ejemplo el siguiente fragmento de código, en el que se utiliza la clase BigDecimal que ofrece Java para trabajar con precisión arbitraria en operaciones con números en coma flotante:
BigDecimal num = new BigDecimal(2); num = num.add(new BigDecimal(3.2)); System.out.println(num.toString()); System.out.println(num.doubleValue());  Para empezar, esta es la salida del programa, que no necesita comentarios:
5.20000000000000017763568394002504646778106689453125 5.2  En Java, salvo el caso del operador &amp;ldquo;+&amp;rdquo; para la concatenación de cadenas, tampoco existe sobrecarga de operadores, por lo que una simple operación como sumar dos números se realiza de forma poco natural:</description>
    </item>
    
    <item>
      <title>Cómo implementar un API REST en Java/JEE</title>
      <link>https://guidogarcia.net/blog/2011/07/31/como-implementar-un-api-rest-en-java-jee/</link>
      <pubDate>Sun, 31 Jul 2011 22:42:53 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2011/07/31/como-implementar-un-api-rest-en-java-jee/</guid>
      <description>Me pidieron consejo hace unos días sobre este tema. Personalmente, a día de hoy sólo recomiendo estas opciones, muy parecidas y que se basan en anotar las clases Java:
 * El especificación **[JAX-RS](http://en.wikipedia.org/wiki/Java_API_for_RESTful_Web_Services)**, incluida de serie en Java EE 6. Hay varias implementaciones, entre otras [Jersey](http://jersey.java.net/), [Restlet](http://www.restlet.org/) o [Resteasy]( http://www.jboss.org/resteasy). Esta última es la que utiliza JBoss y que he utilizado sin problemas también con JBoss 5.1. @Path(&amp;quot;/product/{id}&amp;quot;) public class ProductResource { @GET public String get(@PathParam(&amp;quot;id&amp;quot;) String id) { return .</description>
    </item>
    
  </channel>
</rss>