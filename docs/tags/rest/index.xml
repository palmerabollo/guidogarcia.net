<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rest on Call me Guido</title>
    <link>https://guidogarcia.net/tags/rest/</link>
    <description>Recent content in Rest on Call me Guido</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Guido García · All rights reserved</copyright>
    <lastBuildDate>Thu, 02 Jan 2014 14:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://guidogarcia.net/tags/rest/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Give your configuration some REST</title>
      <link>https://guidogarcia.net/blog/2014/01/02/a-rest-configuration-server/</link>
      <pubDate>Thu, 02 Jan 2014 14:00:00 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2014/01/02/a-rest-configuration-server/</guid>
      <description>I have built a simple configuration server to expose your app&amp;rsquo;s configuration as a REST service. Its name is rest-confidence (github). In this post I will try to explain its basics and three use cases where it could be useful:
 To configure distributed services. As a foundation for A/B testing. As a simple service directory.  Install and run a basic rest-confidence configuration server The first step is installing the configuration server:</description>
    </item>
    
    <item>
      <title>Cómo implementar un API REST en Java/JEE</title>
      <link>https://guidogarcia.net/blog/2011/07/31/como-implementar-un-api-rest-en-java-jee/</link>
      <pubDate>Sun, 31 Jul 2011 22:42:53 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2011/07/31/como-implementar-un-api-rest-en-java-jee/</guid>
      <description>Me pidieron consejo hace unos días sobre este tema. Personalmente, a día de hoy sólo recomiendo estas opciones, muy parecidas y que se basan en anotar las clases Java:
 El especificación JAX-RS, incluida de serie en Java EE 6. Hay varias implementaciones, entre otras Jersey, Restlet o Resteasy. Esta última es la que utiliza JBoss y que he utilizado sin problemas también con JBoss 5.1.  @Path(&amp;#34;/product/{id}&amp;#34;) public class ProductResource { @GET public String get(@PathParam(&amp;#34;id&amp;#34;) String id) { return .</description>
    </item>
    
  </channel>
</rss>