<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tecnología on Call me Guido</title>
    <link>https://guidogarcia.net/categories/tecnolog%C3%ADa/</link>
    <description>Recent content in Tecnología on Call me Guido</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Guido García · All rights reserved</copyright>
    <lastBuildDate>Sun, 18 Feb 2018 19:29:39 +0000</lastBuildDate>
    
	<atom:link href="https://guidogarcia.net/categories/tecnolog%C3%ADa/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Evolutionary art experiment with Marilyn</title>
      <link>https://guidogarcia.net/blog/2018/02/18/evolutionary-art-experiment-with-marilyn/</link>
      <pubDate>Sun, 18 Feb 2018 19:29:39 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2018/02/18/evolutionary-art-experiment-with-marilyn/</guid>
      <description>You know I like evolutionary algorithms. In the past month I ran a small art experiment reflecting the impact of brands and the harmful effect of advertisements in modern life. The idea was to pick a cultural icon and recreate it using corporate logos only.
I started with Marilyn Monroe and a genetic algorithm that combined a set of logos in a mutation and a crossover loop. The mutation phase randomly picked some individuals (an individual is a specific combination of logos) and modified them, as nature would do, replacing some logos, resizing or rotating them.</description>
    </item>
    
    <item>
      <title>The road to serverless computing</title>
      <link>https://guidogarcia.net/blog/2016/07/13/road-serverless-computing/</link>
      <pubDate>Wed, 13 Jul 2016 21:20:13 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2016/07/13/road-serverless-computing/</guid>
      <description>This is my presentation about serverless computing for the TEFcon 2016.
 </description>
    </item>
    
    <item>
      <title>Ansible. Automate everything.</title>
      <link>https://guidogarcia.net/blog/2015/10/18/ansible-automate-everything/</link>
      <pubDate>Sun, 18 Oct 2015 19:13:07 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2015/10/18/ansible-automate-everything/</guid>
      <description>Ansible is an automation tool that works by running tasks (a playbook) against a set of hosts (inventory).
The first beta of Ansible 2.x is ready, and it comes with modules to automate the management of your openstack infrastructure (other cloud platforms are also available). This is my presentantion for begginers who want to start using Ansible and to stop wasting their time.
 </description>
    </item>
    
    <item>
      <title>Apache Mesos and the future of microservice architectures</title>
      <link>https://guidogarcia.net/blog/2015/03/24/apache-mesos-and-the-future-of-microservice-architectures/</link>
      <pubDate>Tue, 24 Mar 2015 08:07:05 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2015/03/24/apache-mesos-and-the-future-of-microservice-architectures/</guid>
      <description>Here you have a presentation Apache Mesos, Marathon and Flock I gave for the cloud community in Telefónica.
Flock is an unstable proof of concept I&amp;rsquo;ve been working on lately. It is a next-generation service platform that uses Marathon to allocate services across a cluster of machines.
I think the time to start caring only about services -not machines- has come. Compute resources should be treated as a commodity. As tap water.</description>
    </item>
    
    <item>
      <title>Simple moving average with bacon.js</title>
      <link>https://guidogarcia.net/blog/2015/01/15/moving-average-with-baconjs/</link>
      <pubDate>Thu, 15 Jan 2015 08:22:35 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2015/01/15/moving-average-with-baconjs/</guid>
      <description>Bacon is a small functional reactive programming lib for JavaScript. Sometimes it is easier to handle data as a stream and react to changes in the stream instead of processing individual events. In the example below (nodejs), a simple moving average.
var Bacon = require(&amp;#39;baconjs&amp;#39;) function avg(array) { var sum = array.reduce(function(a, b) { return a + b; }, 0); return sum / array.length; } var bus = new Bacon.Bus(); bus.</description>
    </item>
    
    <item>
      <title>Evolutionary computation · TEFcon 2014</title>
      <link>https://guidogarcia.net/blog/2014/11/05/evolutionary-computation-%c2%b7-tefcon-2014/</link>
      <pubDate>Wed, 05 Nov 2014 08:13:34 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2014/11/05/evolutionary-computation-%c2%b7-tefcon-2014/</guid>
      <description>This is my presentation (spanish) about evolutionary computation for the TEFcon 2014. It was a talk about how we code and how genetic algorithms and genetic programming might help us. Because &amp;ldquo;programming should be more about the what and less about the how&amp;rdquo;.
 Edit: I&amp;rsquo;ve pushed the Java code for the queens problem using genetic algorithms to github.</description>
    </item>
    
    <item>
      <title>DTrace para flipar pepinillos</title>
      <link>https://guidogarcia.net/blog/2014/08/25/dtrace-para-flipar-pepinillos/</link>
      <pubDate>Mon, 25 Aug 2014 08:16:56 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2014/08/25/dtrace-para-flipar-pepinillos/</guid>
      <description>This is my presentation (spanish) about DTrace, a tracing framework created by Sun that is really cool. It is available on &amp;ldquo;Solaris&amp;rdquo; systems, but also on MacOS, BSD, and some Linux ports.
It is a really powerful tool once you get used to it.
 </description>
    </item>
    
    <item>
      <title>How to catch an Internet troll</title>
      <link>https://guidogarcia.net/blog/2014/04/25/how-to-catch-an-internet-troll/</link>
      <pubDate>Fri, 25 Apr 2014 16:19:37 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2014/04/25/how-to-catch-an-internet-troll/</guid>
      <description>Some weeks ago I carried out a social experiment (dameunverso.com, spanish) that consisted in writing a poem in a collaborative and anonymous way. This means that anyone can add a new verse to the poem without identifying themselves or leaving any metadata (no cookies, no IP address tracking, etc).
Our first trolls didn&amp;rsquo;t take long to appear, mostly in the form of copyrighted material, spam and offensive contents. Is it possible to automatically classify an anonymous verse as spammy?</description>
    </item>
    
    <item>
      <title>Lazy loading of modules in nodejs</title>
      <link>https://guidogarcia.net/blog/2014/03/27/lazy-loading-modules-nodejs/</link>
      <pubDate>Thu, 27 Mar 2014 16:43:59 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2014/03/27/lazy-loading-modules-nodejs/</guid>
      <description>This is a pattern I found in pkgcloud to lazy-load nodejs modules. That is, to defer their loading until a module is actually needed.
var providers = [ &amp;#39;amazon&amp;#39;, &amp;#39;azure&amp;#39;, ..., &amp;#39;joyent&amp;#39; ]; ... //  // Setup all providers as lazy-loaded getters  //  providers.forEach(function (provider) { pkgcloud.providers.__defineGetter__(provider, function () { return require(&amp;#39;./pkgcloud/&amp;#39; + provider); }); });  It basically defines a getter, so modules won&amp;rsquo;t be loaded until you do:</description>
    </item>
    
    <item>
      <title>Cloud is not cheap</title>
      <link>https://guidogarcia.net/blog/2014/03/18/cloud-is-not-cheap/</link>
      <pubDate>Tue, 18 Mar 2014 06:56:37 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2014/03/18/cloud-is-not-cheap/</guid>
      <description>There is a myth about cloud computing. Many people think they will save money moving their services to the cloud, but the reality is that the cloud is not cheap.
Virtualization, one of the core parts of cloud computing, tries to meet the promise of elastic capacity and pay-as-you-go policies. Despite of this promise, the true story is that today we are running virtual machines that don&amp;rsquo;t do much because, most part of the time, our applications are not doing anything.</description>
    </item>
    
    <item>
      <title>The long tail in this blog</title>
      <link>https://guidogarcia.net/blog/2014/01/23/the-long-tail/</link>
      <pubDate>Thu, 23 Jan 2014 15:30:46 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2014/01/23/the-long-tail/</guid>
      <description>This blog is two years old, and I&amp;rsquo;d like to share how its &amp;gt;50K visits are distributed.
One single post drives 40% of the traffic to the blog. At the bottom, 70% of its posts represent 4% of the traffic.
In my opinion, the most popular ones are not the best ones. They are about very specific technical subjects, containing keywords in the title and in the URL slug. Google does the rest.</description>
    </item>
    
    <item>
      <title>Performance is premature optimization</title>
      <link>https://guidogarcia.net/blog/2014/01/18/performance-is-premature-optimization/</link>
      <pubDate>Sat, 18 Jan 2014 19:06:03 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2014/01/18/performance-is-premature-optimization/</guid>
      <description>I will burn in hell, but performance is premature optimization nowadays. Despite it is very interesting from an engineering perspective, from the practical point of view of someone who wants to follow the make-shit-happen startup mantra, my advice is not to worry much about it when it comes to choosing a programming language.
There are things that matter more than the technology stack you choose. In this post I will try to explain why; then you can vent your rage in the comments section.</description>
    </item>
    
    <item>
      <title>Give your configuration some REST</title>
      <link>https://guidogarcia.net/blog/2014/01/02/a-rest-configuration-server/</link>
      <pubDate>Thu, 02 Jan 2014 14:00:00 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2014/01/02/a-rest-configuration-server/</guid>
      <description>I have built a simple configuration server to expose your app&amp;rsquo;s configuration as a REST service. Its name is rest-confidence (github). In this post I will try to explain its basics and three use cases where it could be useful:
 To configure distributed services. As a foundation for A/B testing. As a simple service directory.  Install and run a basic rest-confidence configuration server The first step is installing the configuration server:</description>
    </item>
    
    <item>
      <title>Why is node.js so cool? (from a Java guy)</title>
      <link>https://guidogarcia.net/blog/2013/12/09/why-is-nodejs-so-cool-from-a-java-guy/</link>
      <pubDate>Mon, 09 Dec 2013 14:43:51 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2013/12/09/why-is-nodejs-so-cool-from-a-java-guy/</guid>
      <description>I confess: I am a Java guy At least I used to be. Until I meet node.js. I still think the JVM is one of the greatest pieces of technology ever created by man, and I love the Spring Framework, the hundreds of Apache Java libraries or the over-six-hundred-page books about JEE patterns. It is great for big applications that are created by many developers, or applications that are made to last.</description>
    </item>
    
    <item>
      <title>Big teams are not agile in the digital world</title>
      <link>https://guidogarcia.net/blog/2013/08/12/big-teams-are-not-agile-in-the-digital-world/</link>
      <pubDate>Mon, 12 Aug 2013 14:11:54 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2013/08/12/big-teams-are-not-agile-in-the-digital-world/</guid>
      <description>The post today is not so technical. I have been thinking about why many big corporations, with almost unlimited resources, are not able to deliver top quality products and services. Why companies with a small fraction of resources create new products faster?
I have found several sociopsychological causes, most of them related with an aspect of human activity: working in a team.
Diffusion of responsibility Diffusion of responsibility is a sociopsychological phenomenon whereby a person is less likely to take responsibility for action or inaction when others are present.</description>
    </item>
    
    <item>
      <title>Playing around with Meteor</title>
      <link>https://guidogarcia.net/blog/2013/03/01/playing-with-meteor-framewor/</link>
      <pubDate>Thu, 28 Feb 2013 23:38:42 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2013/03/01/playing-with-meteor-framewor/</guid>
      <description>I have been playing around with meteor, an open-source platform for building web apps. The result is a 200 LOC game ladder with a live demo.
The platform is built on top of nodejs, what is great. In my opinion, it is not ready for production environments yet, but I am really impressed with how fast you can create simple web applications with live page updates, automatic data synchronization and many other niceties I have never seen before in any other web framework.</description>
    </item>
    
    <item>
      <title>Deploy virtual machines on Instant Servers cloud with Java</title>
      <link>https://guidogarcia.net/blog/2013/02/17/deploy-virtual-machines-on-instant-servers-cloud-with-java/</link>
      <pubDate>Sun, 17 Feb 2013 20:23:26 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2013/02/17/deploy-virtual-machines-on-instant-servers-cloud-with-java/</guid>
      <description>Instant Servers is the infrastructure as a service (IaaS) system I have been working on during the last months in Telefónica Digital.
The service offers a public REST API (Cloud API) that is super simple to use. However, in this post I will show you how to manage your infrastructure using a Java client, without dealing with HTTP requests.
Build the Cloud API client Man does not live by nodejs alone.</description>
    </item>
    
    <item>
      <title>Node.js running on my Raspberry Pi. A benchmark.</title>
      <link>https://guidogarcia.net/blog/2012/09/13/node-js-on-my-raspberry-pi-a-benchmark/</link>
      <pubDate>Thu, 13 Sep 2012 19:24:58 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2012/09/13/node-js-on-my-raspberry-pi-a-benchmark/</guid>
      <description>Few weeks ago I could not resist the temptation to buy a Raspberry Pi, the super-cheap 35$ computer that comes with 256MB of RAM and a ARM CPU running at 700MHz and fits in your pocket (more information in wikipedia).
See how nice it looks. I am more of a software guy, so the first thing I did was to install node.js (v0.6.19) develop the simplest web server you can create in node (5 lines, it simply returns a 200 HTTP response code without any contents) and put the beast to work.</description>
    </item>
    
    <item>
      <title>Analysis of variance (ANOVA) applied to fraud detection</title>
      <link>https://guidogarcia.net/blog/2012/08/26/analysis-of-variance-anova-applied-to-fraud-detection/</link>
      <pubDate>Sun, 26 Aug 2012 17:42:41 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2012/08/26/analysis-of-variance-anova-applied-to-fraud-detection/</guid>
      <description>Fraud detection is a topic applicable to many sectors (financial, insurance, etc). The method explained in this post is applied in the market research field by Gather Precision (a great market research tool developed by Gather Estudios, BTW), as an early signal to detect frauds in opinion polls.
Imagine you have four field workers (Peter, John, Mary, Ann) taking surveys on the street. They spend different times gathering the data, and we want to discover if there are significant differences on the average levels.</description>
    </item>
    
    <item>
      <title>My experience in the 2nd Tuenti Programming Challenge</title>
      <link>https://guidogarcia.net/blog/2012/05/06/my-experience-in-tuenti-programming-challenge/</link>
      <pubDate>Sun, 06 May 2012 18:29:45 +0000</pubDate>
      
      <guid>https://guidogarcia.net/blog/2012/05/06/my-experience-in-tuenti-programming-challenge/</guid>
      <description>This week I have been participating in the 2nd edition of the Tuenti Programming Challenge. I felt a little rusty on my return to top-level competition, but despite I started the competition three days late, I was able to reach level 14 (stats). Not so bad.
The problems I prefer are those with an obvious brute force solution, but that can take advantage of a particular algorithm or data structure.</description>
    </item>
    
  </channel>
</rss>